<?xml version="1.0"?>

<launch>
    <param name="/use_sim_time" value="true" />

    <arg name="world_file"  default="$(find menge_gazebo_worlds)/worlds/supermarket.world"/>
    <arg name="gui" default="false"/>

    <arg name="base"       value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
    <arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
    <arg name="stacks"     value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
    <arg name="3d_sensor"  value="hokuyo"/>  <!-- kinect, asus_xtion_pro -->

    <node name="gazebo" pkg="gazebo_ros" type="gzserver" output="screen"
        args="$(arg world_file)" 
        />
    
    <!-- <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <arg name="sim" value="true"/>
    </include> -->

    <!-- <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0" />
    </node> -->

    <!-- <param name="ACTOR_NUMBER" type="int" value="100" />
    <node name="tfped2defaultworld" pkg="turtlebot3_social" type="tfped2defaultworld.py"/>
    <node name="tfodom2actor" pkg="turtlebot3_social" type="tfodom2actor.py"/> -->

    <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find actor_services)/rviz/tf_show.rviz"/> -->
    
    <!-- start gazebo client -->
    <group if="$(arg gui)">
        <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
    </group>

</launch>

